---
energy_manager:
  module: energy_manager
  class: EnergyManager
  virtuals:
    solar_battery:
      events:
        usage_change:
          code: |
            self.log("Solar battery usage change: %.2f w" % value)
            self.call_service("number/set_value", entity_id="number.pv_storage_remote_charge_limit", value=value)
    car:
      events:
        imported_power_update:
          code: |
            cur = self.get_state("sensor.goe_288025_nrg_11")

            try:
              c = float(cur)
            except ValueError:
              c = 0

            if c > entity.usage:
              self.call_service("goecharger_api2/set_pv_data", pgrid=c-entity.usage)
            else:
              self.call_service("goecharger_api2/set_pv_data", pgrid=value)
        exported_power_update:
          code: |
            v = value
            c = 0
            cur = self.get_state("sensor.goe_288025_nrg_11")

            try:
              c = float(cur)
            except ValueError:
              c = 0

            self.log("Current power: %.2f w, Export power: %.2f w, Allowed usage: %.2f w" % (c, v, entity.usage))

            if c > entity.usage:
              self.call_service("goecharger_api2/set_pv_data", pgrid=c-entity.usage)
            else:
              if v > entity.usage:
                v = entity.usage

              wanted = entity.usage - c
              if wanted > v:
                wanted = v

              self.log("Exported power update: %.2f w" % wanted)
              self.call_service("goecharger_api2/set_pv_data", pgrid=wanted * -1)
        switched:
          code: |
            if not value:
              self.call_service("goecharger_api2/set_pv_data", pgrid=10500)
            else:
              self.call_service("goecharger_api2/set_pv_data", pgrid=0)
  consumption:
    solar_battery:
      tracker: sensor.pv_battery1_power
      priority: 0
      min_stage: 1
      stages:
      - usage: 1000
        switch: virtual.solar_battery
      - usage: 2000
        switch: virtual.solar_battery
      - usage: 3000
        switch: virtual.solar_battery
      - usage: 4000
        switch: virtual.solar_battery
      - usage: 5000
        switch: virtual.solar_battery
    car:
      tracker: sensor.car_charger_usage_total
      priority: 1
      stages:
      - usage: 7200
        switch: virtual.car
      - usage: 4800
        switch: virtual.car
      - usage: 3200
        switch: virtual.car
      - usage: 2400
        switch: virtual.car
      - usage: 1600
        switch: virtual.car
    water_heating_pump:
      tracker: sensor.water_heating_pump_usage
      priority: 2
      stages: 
      - usage: 1600
        switch: switch.water_heater_pv_switch_powerr_usage_stage_2
      - usage: 500
        switch: switch.water_heater_pv_switch_powerr_usage_stage_1
bed:
  module: bed
  class: Bed
api:
  module: api
  class: API
light_bad:
  module: light
  class: Light
  waterHigh: 800
  waterLow: 300
light_speisekammer:
  module: light
  class: Light
light_kueche:
  module: light
  class: Light
light_schlafzimmer:
  module: light
  class: Light
light_wohnzimmer:
  module: light
  class: Light
light_buero_fabian:
  module: light
  class: Light
light_buero_merja:
  module: light
  class: Light
  waterHigh: 400
  waterLow: 200
light_flur:
  module: light
  class: Light
heating_speisekammer:
  module: heating
  class: Heating
  dependencies:
  - energy_manager
heating_kueche:
  module: heating
  class: Heating
  dependencies:
  - energy_manager
heating_wohnzimmer:
  module: heating
  class: Heating
  dependencies:
  - energy_manager
heating_buero_fabian:
  module: heating
  class: Heating
  dependencies:
  - energy_manager
heating_bad:
  module: heating
  class: Heating
  dependencies:
  - energy_manager
heating_buero_merja:
  module: heating
  class: Heating
  dependencies:
  - energy_manager
heating_flur:
  module: heating
  class: Heating
  dependencies:
  - energy_manager
heating_schlafzimmer:
  module: heating
  class: Heating
  dependencies:
  - energy_manager